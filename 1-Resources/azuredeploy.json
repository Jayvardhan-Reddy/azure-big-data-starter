{
  "$schema": "http://schema.management.azure.com/schemas/2014-04-01-preview/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "subscriptionName": {
      "type": "string",
      "metadata": {
        "description": "Subscription Name"
      }
    },
    "resourcesGroupName": {
      "type": "string",
      "metadata": {
        "description": "Resource Group Name"
      }
    },
    "storageAccountName": {
      "type": "string",
      "metadata": {
        "description": "Blob Storage account name"
      }
    },
    "storageContainerName": {
      "type": "string",
      "metadata": {
        "description": "Blob Storage container name."
      }
    },
    "resourcesGroupLocation": {
      "type": "string",
      "metadata": {
        "description": "Resource Group Location"
      }
    },
    "namespaceName": {
      "type": "string",
      "metadata": {
        "description": "Name of the EventHub namespace"
      }
    },
    "eventHubName": {
      "type": "string",
      "metadata": {
        "description": "Name of the Event Hub"
      }
    },
    "serviceBusNamespaceName": {
      "type": "string",
      "metadata": {
        "description": "Name of the Service Bus namespace"
      }
    },
    "serviceBusQueueName": {
      "type": "string",
      "metadata": {
        "description": "Name of the Queue"
      }
    },
    "serviceBusApiVersion": {
      "type": "string",
      "defaultValue": "2015-08-01",
      "metadata": {
        "description": "Service Bus ApiVersion used by the template"
      }
    },
    "streamAnalyticsJobName": {
      "type": "string",
      "minLength": 3,
      "maxLength": 63,
      "metadata": {
        "description": "Stream Analytics Job Name, can contain alphanumeric characters and hypen and must be 3-63 characters long"
      }
    },
    "sqlServerName": {
      "type": "string",
      "metadata": {
        "description": "SQL Server Name"
      }
    },
    "sqlDWDBName": {
      "type": "string",
      "metadata": {
        "description": "SQL Database Name"
      }
    },
    "sqlDWDBAdminName": {
      "type": "string",
      "metadata": {
        "description": "Sql User Name"
      }
    },
    "sqlDWAdminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Sql DB Password"
      }
    },
    "sqlDBStartIpAddress": {
      "type": "string",
      "metadata": {
        "description": "SQL firewall start IP"
      }
    },
    "sqlDBEndIpAddress": {
      "type": "string",
      "metadata": {
        "description": "SQL firewall start IP"
      }
    },
    "appServiceName": {
      "type": "string",
      "minLength": 1,
      "maxLength": 10
    },
    "websiteName": {
      "type": "string",
      "metadata": {
        "description": "Website name"
      }
    },
    "appServicePlanSkuName": {
      "type": "string",
      "defaultValue": "S1",
      "allowedValues": [
        "F1",
        "D1",
        "B1",
        "B2",
        "B3",
        "S1",
        "S2",
        "S3",
        "P1",
        "P2",
        "P3",
        "P4"
      ],
      "metadata": {
        "description": "Describes plan's pricing tier and capacity. Check details at https://azure.microsoft.com/en-us/pricing/details/app-service/"
      }
    },
    "dataFactoryName": {
      "type": "string",
      "metadata": {
        "description": "Data Factory name"
      }
    },
    "dataFactoryLocation": {
      "type": "string",
      "metadata": {
        "description": "Data Factory Location"
      }
    }


  },
  "variables": {
    "defaultSASKeyName": "RootManageSharedAccessKey",
    "eventHubResourceId": "[resourceId('Microsoft.EventHub/namespaces/authorizationRules', parameters('namespaceName'), variables('defaultSASKeyName'))]",
    "ehVersion": "2017-04-01",
    "sbVersion": "[parameters('serviceBusApiVersion')]",
    "serviceBusResourceId": "[resourceId('Microsoft.ServiceBus/namespaces/authorizationRules', parameters('serviceBusNamespaceName'), variables('defaultSASKeyName'))]",
    "storageVersion": "2016-01-01",
    "storageResourceId": "[resourceId('Microsoft.Storage/storageAccounts/', parameters('storageAccountName'))]"
    
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[parameters('storageAccountName')]",
      "apiVersion": "2016-01-01",
      "location": "[parameters('resourcesGroupLocation')]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "Storage",
      "properties": {}
    },
    {
      "apiVersion": "2017-04-01",
      "name": "[parameters('namespaceName')]",
      "type": "Microsoft.EventHub/Namespaces",
      "location": "[parameters('resourcesGroupLocation')]",
      "sku": {
        "name": "Standard"
      },
      "properties": {
        "isAutoInflateEnabled": "true",
        "maximumThroughputUnits": "20"
      },
      "resources": [
        {
          "apiVersion": "2017-04-01",
          "name": "[parameters('eventHubName')]",
          "type": "EventHubs",
          "dependsOn": [
            "[concat('Microsoft.EventHub/namespaces/', parameters('namespaceName'))]"
          ],
          "properties": {
            "messageRetentionInDays": "7",
            "partitionCount": "4"
          }
        }
      ]
    },
    {
      "apiVersion": "[variables('sbVersion')]",
      "name": "[parameters('serviceBusNamespaceName')]",
      "type": "Microsoft.ServiceBus/Namespaces",
      "location": "[parameters('resourcesGroupLocation')]",
      "kind": "Messaging",
      "sku": {
        "name": "StandardSku",
        "tier": "Standard"
      },
      "resources": [
        {
          "apiVersion": "[variables('sbVersion')]",
          "name": "[parameters('serviceBusQueueName')]",
          "type": "Queues",
          "dependsOn": [
            "[concat('Microsoft.ServiceBus/namespaces/', parameters('serviceBusNamespaceName'))]"
          ],
          "properties": {
            "path": "[parameters('serviceBusQueueName')]"
          }
        }
      ]
    },
    {
      "name": "[parameters('sqlServerName')]",
      "type": "Microsoft.Sql/servers",
      "location": "[parameters('resourcesGroupLocation')]",
      "apiVersion": "2014-04-01",
      "properties": {
        "administratorLogin": "[parameters('sqlDWDBAdminName')]",
        "administratorLoginPassword": "[parameters('sqlDWAdminPassword')]",
        "version": "12.0"
      },
      "resources": [
        {
          "name": "[parameters('sqlDWDBName')]",
          "type": "databases",
          "location": "[parameters('resourcesGroupLocation')]",
          "apiVersion": "2014-04-01",

          "dependsOn": [
            "[concat('Microsoft.Sql/servers/', parameters('sqlServerName'))]"
          ],
          "properties": {
            "collation": "SQL_Latin1_General_CP1_CI_AS",
            "edition": "DataWarehouse"

          }
        },
        {
          "apiVersion": "2014-04-01",
          "dependsOn": [
            "[concat('Microsoft.Sql/servers/', parameters('sqlServerName'))]"
          ],
          "location": "[parameters('resourcesGroupLocation')]",
          "name": "AllowAllAzureIps",
          "properties": {
            "endIpAddress": "[parameters('sqlDBEndIpAddress')]",
            "startIpAddress": "[parameters('sqlDBStartIpAddress')]"
          },
          "type": "firewallrules"
        }
      ]
    },
    {
      "type": "Microsoft.StreamAnalytics/StreamingJobs",
      "apiVersion": "2016-03-01",
      "name": "[parameters('streamAnalyticsJobName')]",
      "location": "[parameters('resourcesGroupLocation')]",
      "dependsOn": [
        "[parameters('sqlDWDBName')]",
        "[parameters('serviceBusQueueName')]",
        "[parameters('eventHubName')]",
        "[parameters('storageAccountName')]"
      ],
      "properties": {
        "sku": {
          "name": "standard"
        },
        "outputErrorPolicy": "stop",
        "eventsOutOfOrderPolicy": "adjust",
        "eventsOutOfOrderMaxDelayInSeconds": 0,
        "eventsLateArrivalMaxDelayInSeconds": 5,
        "dataLocale": "en-US",
        "inputs": [
          {
            "name": "EventHubInput",
            "properties": {
              "type": "Stream",
              "datasource": {
                "type": "Microsoft.ServiceBus/EventHub",
                "properties": {
                  "serviceBusNamespace": "[parameters('namespaceName')]",
                  "eventHubName": "[parameters('eventHubName')]",
                  "consumerGroupName": null,
                  "sharedAccessPolicyName": "RootManageSharedAccessKey",
                  "sharedAccessPolicyKey": "[listkeys(variables('eventHubResourceId'), variables('ehVersion')).primaryKey]"
                }
              },
              "serialization": {
                "type": "Json",
                "properties": {
                  "encoding": "UTF8",
                  "format": "LineSeparated"
                }
              }
            }
          },
          {
            "name": "ReferenceInput",
            "properties": {
              "type": "Reference",
              "datasource": {
                "type": "Microsoft.Storage/Blob",
                "properties": {
                  "storageAccounts": [
                    {
                      "accountName": "[parameters('storageAccountName')]",
                      "accountKey": "[listKeys(variables('storageResourceId'), variables('storageVersion')).keys[0].value]"
                    }
                  ],
                  "container": "[parameters('storageContainerName')]",
                  "pathPattern": "ReferenceData//car_info.csv",
                  "dateFormat": "yyyy/MM/dd",
                  "timeFormat": "HH"
                }
              },
              "serialization": {
                "type": "Csv",
                "properties": {
                  "fieldDelimiter": ";",
                  "encoding": "UTF8"
                }
              }
            }
          }
        ],
        "outputs": [
          {
            "name": "ServiceBusOutput",
            "properties": {
              "serialization": {
                "type": "Json",
                "properties": {
                  "encoding": "UTF8",
                  "format": "LineSeparated"
                }
              },
              "datasource": {
                "type": "Microsoft.ServiceBus/Queue",
                "properties": {
                  "serviceBusNamespace": "[parameters('serviceBusNamespaceName')]",
                  "queueName": "[parameters('serviceBusQueueName')]",
                  "sharedAccessPolicyName": "RootManageSharedAccessKey",
                  "sharedAccessPolicyKey": "[listkeys(variables('serviceBusResourceId'), variables('sbVersion')).primaryKey]"
                }
              }
            }
          },
          {
            "name": "SqlOutput",
            "properties": {
              "serialization": {
                "type": "Json",
                "properties": {
                  "encoding": "UTF8",
                  "format": "LineSeparated"
                }
              },
              "datasource": {
                "type": "Microsoft.Sql/Server/Database",
                "properties": {
                  "server": "[parameters('sqlServerName')]",
                  "database": "[parameters('sqlDWDBName')]",
                  "user": "[parameters('sqlDWDBAdminName')]",
                  "table": "dbo.CarHealthStatus",
                  "password": "[parameters('sqlDWAdminPassword')]"
                }
              }
            }
          }
        ],
        "transformation": {
          "name": "Transformation",
          "properties": {
            "streamingUnits": 1,
            "query": "SELECT \r\n\tInput.carid, \r\n\tSystem.Timestamp as deviceTime,\r\n\tAVG(Input.SpeedOdb) as speedOdb\r\nINTO SqlOutput \r\nFROM EventHubInput AS Input\r\nGROUP BY Input.carid, TumblingWindow(SECOND, 10);\r\n\r\nSELECT\r\n    Ref.Make,\r\n    System.Timestamp as deviceTime,\r\n    AVG(Input.Longitude) as longitude,\r\n    AVG(Input.Latitude) as latitude,\r\n    AVG(Input.EngineRpm) as engineRpm,\r\n    AVG(Input.SpeedOdb) as speedOdb\r\nINTO ServiceBusOutput \r\nFROM EventHubInput AS Input\r\nINNER JOIN [ReferenceInput] AS Ref\r\nON Input.carid = Ref.carid\r\nGROUP BY Ref.Make, TumblingWindow(SECOND, 5);"
          }
        },
        "functions": []
      }
    },
    {
      "name": "[parameters('appServiceName')]",
      "type": "Microsoft.Web/serverfarms",
      "location": "[parameters('resourcesGroupLocation')]",
      "apiVersion": "2015-08-01",
      "sku": {
        "name": "[parameters('appServicePlanSkuName')]"
      },
      "dependsOn": [],
      "tags": {
        "displayName": "appServicePlan"
      },
      "properties": {
        "name": "[parameters('appServiceName')]",
        "numberOfWorkers": 1
      }
    },
    {
      "name": "[parameters('websiteName')]",
      "type": "Microsoft.Web/sites",
      "location": "[parameters('resourcesGroupLocation')]",
      "apiVersion": "2015-08-01",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', parameters('appServiceName'))]"
      ],

      "properties": {
        "name": "[parameters('websiteName')]",
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('appServiceName'))]"
      }
    },
    {
      "name": "[parameters('dataFactoryName')]",
      "apiVersion": "2015-10-01",
      "type": "Microsoft.DataFactory/datafactories",
      "location": "[parameters('dataFactoryLocation')]"
    }
  ],
  "outputs": {
    "EventHubConnString": {
      "type": "string",
      "value": "[listkeys(variables('eventHubResourceId'), variables('ehVersion')).primaryConnectionString]"
    },
    "EventHubKey": {
      "type": "string",
      "value": "[listkeys(variables('eventHubResourceId'), variables('ehVersion')).primaryKey]"
    },
    "ServiceBusConnString": {
      "type": "string",
      "value": "[listkeys(variables('serviceBusResourceId'), variables('sbVersion')).primaryConnectionString]"
    },
    "ServiceBusKey": {
      "type": "string",
      "value": "[listkeys(variables('serviceBusResourceId'), variables('sbVersion')).primaryKey]"
    },
    "storageAccountKey": {
      "type": "string",
      "value": "[listKeys(variables('storageResourceId'), variables('storageVersion')).keys[0].value]"
    }

  }
}